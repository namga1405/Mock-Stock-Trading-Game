package Stonks;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.JScrollPane;

public class profileotherScreen extends JFrame {

	private JPanel contentPane;
	private JScrollPane scrollPane;
	private JTable tbtStocks;
	private String username;
	private String otherusername;
	private int rank;
	private double balance;
	private ArrayList<String> stockname;
	private ArrayList<Double> value;
	private ArrayList<Double> cost;
	private ArrayList<Integer> noBought;
	private JLabel lblRanking;
	private JLabel lblBalance;
	private JLabel lblUser;
	
	public void showName(String str) {
		otherusername = str;
		String st = lblUser.getText();
		lblUser.setText(st+": "+otherusername);

	}
	
	public void storeName(String str) {
		username = str;
	}
	
	//Retrieve the name of stock, number of stock buy, current price and purchase price by a user and the ranking and balance of that user
	public void retrieveInfo(int ID) {
		int i = ID;
		stockname = UserInfo.getStockname(i);
		noBought = UserInfo.getnoBought(i);
		cost = UserInfo.getCost(i);
		value = UserInfo.getValue(i);
		int rank = UserInfo.getRankfromID(i);
		double balance = UserInfo.getBalancefromID(i);
		lblRanking.setText(lblRanking.getText()+" "+rank);
		lblBalance.setText(lblBalance.getText()+" "+balance);
	}
	
	

	   public void showStocks(JTable table){
	        DefaultTableModel model = (DefaultTableModel)table.getModel();
	        for(int i = 0; i < stockname.size(); i++){
	           //Getting data to fill up the row by using accessor methods that are featured on UserInfo class
	           String Name = stockname.get(i);
	           int Bought = noBought.get(i);
	           double currentprice = value.get(i);
	           double buyingprice = cost.get(i);
	            
	           Object tableData[] = {Name,Bought,buyingprice,currentprice};
	           model.addRow(tableData);
	            
	        }
	    }

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					profileotherScreen frame = new profileotherScreen();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public profileotherScreen() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 700, 600);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		lblUser = new JLabel("User: ");
		lblUser.setFont(new Font("SansSerif", Font.BOLD | Font.ITALIC, 15));
		lblUser.setBounds(30, 26, 277, 35);
		contentPane.add(lblUser);
		
		lblRanking = new JLabel("Ranking: ");
		lblRanking.setFont(new Font("SansSerif", Font.BOLD | Font.ITALIC, 15));
		lblRanking.setBounds(30, 72, 277, 35);
		contentPane.add(lblRanking);
		
		lblBalance = new JLabel("Balance: ");
		lblBalance.setFont(new Font("SansSerif", Font.BOLD | Font.ITALIC, 15));
		lblBalance.setBounds(362, 72, 277, 35);
		contentPane.add(lblBalance);
		
		JButton btnShow = new JButton("Show list");
		btnShow.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnShow.setBounds(496, 110, 143, 27);
		contentPane.add(btnShow);
		btnShow.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				showStocks(tbtStocks);
			}
		});
		
		JButton btnRanking = new JButton("Ranking");
		btnRanking.setFont(new Font("SansSerif", Font.BOLD, 15));
		btnRanking.setBounds(30, 477, 143, 27);
		contentPane.add(btnRanking);
		btnRanking.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					//Change to ranking screen
					setVisible(false);
					rankingScreen ranking = new rankingScreen();
					ranking.storeName(username);
					ranking.setVisible(true);
				}
				catch(Exception exc) {
					exc.printStackTrace();
				}
			}
		});
		
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(30, 148, 609, 318);
		contentPane.add(scrollPane);
		
		tbtStocks = new JTable();
		scrollPane.setViewportView(tbtStocks);
		tbtStocks.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Stocks", "Stocks bought", "Purchased Price (in $)", "Current Price (in $)"
			}
		));
	}
}

